@model SadhanaApp.WebUI.ViewModels.ChantingViewModel

@{
    ViewData["Title"] = "Sadhana History";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="w-100 card border-0 p-4">
    <div class="card-header bg-success bg-gradient ml-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="text-white py-2">Record Your Entry</h2>
            </div>
        </div>
    </div>

    <div class="card-body border p-4">
        <form asp-action="RecordSadhana" method="post" class="row">
           @*  <div class="form-group">
                <div asp-validation-summary="All" class="text-danger"></div>
            </div> *@
            <div class="p-3">
                <div class="form-floating py-1 col-12">
                    <input asp-for="Date" type="date" class="form-control border shadow" required />
                    <label asp-for="Date" class="ms-2"></label>
                    <span asp-validation-for="Date" class="text-danger"></span>
                </div>

                <div class="form-floating py-1 col-12">
                    <input asp-for="MorningRounds" type="number" class="form-control border shadow" />
                    <label asp-for="MorningRounds" class="ms-2">Chanted Rounds in the Morning (till 8am):</label>
                    <span asp-validation-for="MorningRounds" class="text-danger"></span>
                </div>

                <div class="form-floating py-1 col-12">
                    <input asp-for="DayRounds" type="number" class="form-control border shadow" />
                    <label asp-for="DayRounds" class="ms-2">Chanted Rounds during the Day (8am to 6pm):</label>
                    <span asp-validation-for="DayRounds" class="text-danger"></span>
                </div>

                <div class="form-floating py-1 col-12">
                    <input asp-for="EveningRounds" type="number" class="form-control border shadow" />
                    <label asp-for="EveningRounds" class="ms-2">Chanted Rounds in the Evening (after 6pm):</label>
                    <span asp-validation-for="EveningRounds" class="text-danger"></span>
                </div>

                <div class="form-floating py-1 col-12">
                    <input asp-for="ReadingTitle" type="text" class="form-control border shadow" />
                    <label asp-for="ReadingTitle" class="ms-2">Reading Title:</label>
                </div>

                <div class="form-floating py-1 col-12">
                    <input asp-for="ReadingDurationInMinutes" type="number" class="form-control border shadow" />
                    <label asp-for="ReadingDurationInMinutes" class="ms-2">Reading Duration (in minutes):</label>
                    <span asp-validation-for="ReadingDurationInMinutes" class="text-danger"></span>
                </div>


                <div class="form-floating py-1 col-12">
                    <input asp-for="HearingTitle" type="text" class="form-control border shadow" />
                    <label asp-for="HearingTitle" class="ms-2">Hearing Title:</label>
                </div>

                <div class="form-floating py-1 col-12">
                    <input asp-for="HearingDurationInMinutes" type="number" class="form-control border shadow" />
                    <label asp-for="HearingDurationInMinutes" class="ms-2">Hearing Duration (in minutes):</label>
                    <span asp-validation-for="HearingDurationInMinutes" class="text-danger"></span>
                </div>


                <div class="form-floating py-1 col-12">
                    <select asp-for="SelectedServiceTypeId" asp-items="ViewBag.ServiceTypeList" class="form-control" id="serviceDropdown" onchange="toggleCustomServiceTypeInput();">
                        <option value="">--Select Service Type--</option>
                    </select>
                    <label asp-for="SelectedServiceTypeId" class="ms-2">Service Type:</label>
                </div>




                <div class="form-floating py-1 col-12" id="customServiceTypeContainer" style="display:none;">
                    <input asp-for="CustomServiceTypeInput" name="CustomServiceTypeInput" type="text" class="form-control border shadow" />
                    <label asp-for="CustomServiceTypeInput" class="ms-2">Custom Service Type</label>
                </div>

                <div class="form-floating py-1 col-12">
                    <input asp-for="ServiceDurationInMinutes" type="number" class="form-control border shadow" />
                    <label asp-for="ServiceDurationInMinutes" class="ms-2">Service Duration(in minutes):</label>
                    <span asp-validation-for="ServiceDurationInMinutes" class="text-danger"></span>
                </div>
                <div class="form-floating py-1 col-12">
                    <textarea asp-for="Notes" class="form-control border shadow"></textarea>
                    <label asp-for="Notes" class="ms-2">
                        Notes (This space can be used to explain any sudden jump/fall in sadhana. E.g. Ekadashi, Sickness, etc.)
                    </label>
                </div>


            <div class="row pt-2">
                <div class="col-6 col-md-3">
                    <button type="submit" class="btn btn-success w-100">
                        <i class="bi bi-check-circle"></i> Create
                    </button>
                </div>
                <div class="col-6 col-md-3">
                    <a asp-controller="Sadhana" asp-action="SadhanaHistory" class="btn btn-secondary w-100">
                        <i class="bi bi-x-circle"></i> Cancel
                    </a>
                </div>
            </div>
            </div>
            
        </form>
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    function toggleCustomServiceTypeInput() {
        var dropdown = document.getElementById('serviceDropdown');
        var customServiceInputContainer = document.getElementById('customServiceTypeContainer');
        var customServiceInput = document.getElementById('customServiceTypeInput');

        if (dropdown.value === 'other') {
            customServiceInputContainer.style.display = 'block';
            customServiceInput.required = true; // Make the field required
        } else {
            customServiceInputContainer.style.display = 'none';
            customServiceInput.required = false; // Remove the required attribute
        }
    }

    // Call the function on initial load to set the correct state
    document.addEventListener('DOMContentLoaded', function () {
        toggleCustomServiceTypeInput();
    });
</script>

