@using System.Security.Claims

@model ChantingViewModel
@{
    ViewData["Title"] = "Edit Chanting Record";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit Sadhana Record</h2>

<form asp-action="Edit" method="post">
    @*  <div class="form-group">
    <div asp-validation-summary="All" class="text-danger"></div>
    </div> *@
    <div class="form-group">
        <label asp-for="Date">Date</label>
        <input asp-for="Date" type="date" class="form-control" required />
    </div>

    <div class="form-group">
        <label asp-for="MorningRounds">Morning Rounds</label>
        <input asp-for="MorningRounds" class="form-control" />
    </div>

    <div class="form-group">
        <label asp-for="DayRounds">Day Rounds</label>
        <input asp-for="DayRounds" class="form-control" />
    </div>

    <div class="form-group">
        <label asp-for="EveningRounds">Evening Rounds</label>
        <input asp-for="EveningRounds" class="form-control" />
    </div>

    <div class="form-group">
        <label asp-for="ReadingTitle">Reading Title</label>
        <input asp-for="ReadingTitle" class="form-control" />
    </div>

    <div class="form-group">
        <label asp-for="ReadingDurationInMinutes">Reading Duration (in minutes)</label>
        <input asp-for="ReadingDurationInMinutes" class="form-control" />
    </div>

    <div class="form-group">
        <label asp-for="HearingTitle">Hearing Title</label>
        <input asp-for="HearingTitle" class="form-control" />
    </div>

    <div class="form-group">
        <label asp-for="HearingDurationInMinutes">Hearing Duration (in minutes)</label>
        <input asp-for="HearingDurationInMinutes" class="form-control" />
    </div>


    <div class="dropdown">
        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
            Select Service Types
        </button>
        <ul class="dropdown-menu p-2" aria-labelledby="dropdownMenuButton">
            @foreach (var serviceType in ViewBag.ServiceTypeList as List<SelectListItem>)
            {
                <li>
                    <div class="form-check">
                        <input class="form-check-input service-type-checkbox" type="checkbox" name="SelectedServiceTypeNames" value="@serviceType.Text" id="serviceType-@serviceType.Value"
                        @(Model.SelectedServiceTypeNames.Contains(serviceType.Text) ? "checked" : "")>
                        <label class="form-check-label" for="serviceType-@serviceType.Value">
                            @serviceType.Text
                        </label>
                    </div>
                </li>
            }
        </ul>
    </div>
    <label asp-for="ServiceDurationInMinutes">Service Duration (in minutes)</label>
    <input asp-for="ServiceDurationInMinutes" class="form-control" />
    <div class="col-12 mt-1">
        <i class="bi bi-info-circle" id="infoIconManageServices" style="cursor: pointer;"></i>
        <small class="text-muted"> Click the icon for more information about Services Type.</small>
        <div id="notesManageServices" style="display: none;">
            <small class="text-muted">Select 'Manage Services' from menu to add a new service type. Once added, it will appear in the dropdown menu when you return to this page.</small>
        </div>
    </div>

    


    <div class="col-12 mt-1">
        <i class="bi bi-info-circle" id="infoIconNotes" style="cursor: pointer;"></i>
        <small class="text-muted"> Click the icon for more information about Notes section.</small>
        <div id="notesInfoText" style="display: none;">
            <small class="text-muted">Use this space to explain any sudden jump/fall in sadhana, such as on Ekadashi, during sickness, etc.</small>
        </div>
    </div>

    <div class="row pt-2">
        <div class="col-6 col-md-3">
            <button type="submit" class="btn btn-success w-100">
                <i class="bi bi-check-circle"></i> Update
            </button>
        </div>
        <div class="col-6 col-md-3">
            <a asp-controller="Sadhana" asp-action="SadhanaHistory" class="btn btn-secondary w-100">
                <i class="bi bi-x-circle"></i> Cancel
            </a>
        </div>
    </div>
</form>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
        function updateSelectedServiceTypes() {
            var selectedServiceTypes = $('.dropdown-menu .form-check-input:checked').map(function () {
                return this.value;
            }).get().join(';');
            $('#selectedServiceTypes').val(selectedServiceTypes);
        }

        function saveFormData() {
            var userId = @User.FindFirstValue(ClaimTypes.NameIdentifier);
            var selectedServiceTypes = $('#serviceTypesDropdown').val() || [];
            var selectedServiceTypeNames = selectedServiceTypes.map(function (id) {
                return $("#serviceTypesDropdown option[value='" + id + "']").text();
            }).join(';');

            var formData = {
                date: $('#Date').val(),
                morningRounds: $('#MorningRounds').val(),
                dayRounds: $('#DayRounds').val(),
                eveningRounds: $('#EveningRounds').val(),
                readingTitle: $('#ReadingTitle').val(),
                readingDurationInMinutes: $('#ReadingDurationInMinutes').val(),
                hearingTitle: $('#HearingTitle').val(),
                hearingDurationInMinutes: $('#HearingDurationInMinutes').val(),
                selectedServiceTypeNames: selectedServiceTypeNames, // Changed to store the names
                serviceDurationInMinutes: $('#ServiceDurationInMinutes').val(),
                notes: $('#Notes').val(),
            };
            localStorage.setItem('sadhanaFormData' + userId, JSON.stringify(formData));
        }


        // Attach event listeners
        $('#Date, #MorningRounds, #DayRounds, #EveningRounds, #ReadingTitle, #ReadingDurationInMinutes, #HearingTitle, #HearingDurationInMinutes, #serviceTypesDropdown, #ServiceDurationInMinutes, #Notes').change(saveFormData);


        $(document).ready(function () {
            $('.service-type-checkbox').change(function () {
                updateSelectedServiceTypes();
            });

            // Initialize with pre-selected values
            updateSelectedServiceTypes();

            var userId = @User.FindFirstValue(ClaimTypes.NameIdentifier);
            var returningFromServiceTypes = localStorage.getItem('returningFromServiceTypes');

            if (returningFromServiceTypes === 'true') {
                var savedData = localStorage.getItem('sadhanaFormData' + userId);
                if (savedData) {
                    var formData = JSON.parse(savedData);
                    var savedDate = new Date(formData.date);
                    var currentDate = new Date();
                    if (savedDate.setHours(0, 0, 0, 0) === currentDate.setHours(0, 0, 0, 0)) {
                        $('#Date').val(formData.date);
                    }
                    $('#MorningRounds').val(formData.morningRounds);
                    $('#DayRounds').val(formData.dayRounds);
                    $('#EveningRounds').val(formData.eveningRounds);
                    $('#ReadingTitle').val(formData.readingTitle);
                    $('#ReadingDurationInMinutes').val(formData.readingDurationInMinutes);
                    $('#HearingTitle').val(formData.hearingTitle);
                    $('#HearingDurationInMinutes').val(formData.hearingDurationInMinutes);

                    // Handle multi-select service types
                    if (formData.selectedServiceTypeNames) {
                        var serviceNames = formData.selectedServiceTypeNames.split(';');
                        $('#serviceTypesDropdown').val(serviceNames);
                        $('#serviceTypesDropdown').trigger('change');
                    }

                    $('#ServiceDurationInMinutes').val(formData.serviceDurationInMinutes);
                    $('#Notes').val(formData.notes);
                }
                localStorage.removeItem('returningFromServiceTypes');
            } else {
                localStorage.removeItem('sadhanaFormData' + userId);
            }
        });
</script>

        <script>
    $(document).ready(function () {

        // Autocomplete for Reading Title

        $("#ReadingTitle").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetReadingTitles", "Sadhana")',
                    data: { term: request.term },
                    success: function (data) {
                        response(data);
                    }
                });
            },
            minLength: 1, // Start after typing 2 characters
            select: function (event, ui) {
                // Set the input field's value to the selected item's value
                $(this).val(ui.item.value);

                // Additional actions
                // For example, if you want to trigger a form submission or update another part of your UI based on the selection
                // $('#someOtherElement').val(ui.item.someOtherProperty);

                // Prevent the widget from automatically inserting the value into the input field
                return false;
            }
        });

        // Autocomplete for Hearing Title
        $("#HearingTitle").autocomplete({
            source: '@Url.Action("GetHearingTitles", "Sadhana")', // Adjust the URL as needed
            minLength: 1,
            select: function (event, ui) {
                $(this).val(ui.item.value);
                return false;
            }
        });
    });
        </script>

<script>
    $(document).ready(function () {
        $('#infoIconNotes').click(function () {
            $('#notesInfoText').toggle();
        });

        $('#infoIconManageServices').click(function () {
            $('#notesManageServices').toggle();
        });
    });
</script>
}